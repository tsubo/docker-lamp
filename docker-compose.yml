version: '3'

services:
  front:
    build:
      context: ./docker/node
    depends_on:
      - php
    volumes:
      - ${FRONT_PATH}:/app
      - node_module-store:/app/node_modules
    working_dir: /app
    ports:
      - 80:8080
    tty: true

  php:
    build:
      context: ./docker/php
      args:
        - TZ=${TZ}
    depends_on:
      - db
    volumes:
      - ${WEB_PATH}:/app
      - ./logs:/var/log/php
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    working_dir: /app

  web:
    image: nginx:1.17-alpine
    depends_on:
      - php
    ports:
      - 8000:80
    volumes:
      - ${WEB_PATH}:/app
      - ./logs:/var/log/nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - TZ=${TZ}

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: docker-db
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: ${TZ}
    volumes:
      - mysql-store:/var/lib/mysql
      - ./logs:/var/log/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      # - ./docker/mysql/sql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=db
      - PMA_USER=root
      - PMA_PASSWORD=root
    ports:
      - 8080:80
  
  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025

volumes:
  mysql-store: {}
  node_module-store: {}
